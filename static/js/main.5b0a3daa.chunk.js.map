{"version":3,"sources":["components/SearchBox.jsx","api/api.js","components/Image.jsx","components/Gallery.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","input","setinput","className","type","name","placeholder","value","onChange","e","target","minLength","debounceTimeout","baseURL","require","config","REACT_APP_API_KEY","process","getTrendingImages","a","fetch","headers","Authorization","res","ok","console","error","status","json","log","getSearchedImages","query","url","URL","search","URLSearchParams","per_page","results","Image","urls","handleClick","rootDOMAttributes","onClick","regular","src","small","alt","width","modalStyle","content","border","padding","overflow","background","Gallery","useState","imgList","setimgList","currentImg","setcurrentImg","useEffect","then","data","trim","Modal","setAppElement","style","isOpen","onRequestClose","length","options","isFitWidth","map","img","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b0a3daa.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { DebounceInput } from 'react-debounce-input'\r\nimport './style.css'\r\n\r\nconst SearchBox = ({input, setinput}) => {\r\n    return (\r\n        <>\r\n        <h1 className=\"title\">PicApp | Tapesh</h1>\r\n            <DebounceInput \r\n                type=\"text\" \r\n                name=\"Photo Search\" \r\n                placeholder=\"Search Here...\" \r\n                className=\"inputBox\" \r\n                value={input} \r\n                onChange={(e)=> setinput(e.target.value)}\r\n                minLength={3}\r\n                debounceTimeout={300}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBox","const baseURL = 'https://api.unsplash.com';\r\nrequire('dotenv').config()\r\nconst REACT_APP_API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport const getTrendingImages = async () => {\r\n    try {\r\n        const res = await fetch(`${baseURL}/photos?per_page=40`,{\r\n            headers: {\r\n                Authorization :`Client-ID ${REACT_APP_API_KEY}`\r\n            }\r\n        });\r\n        if(!res.ok){\r\n            console.error('Failed ',res.status)\r\n            return;\r\n        }\r\n        const json = await res.json();\r\n        return json\r\n    } catch (error) {\r\n        console.log(\"error hai\", error);\r\n    }\r\n}\r\n\r\n// Adding search \r\n\r\nexport const getSearchedImages = async (query) => {\r\n    const url = new URL(`${baseURL}/search/photos`);\r\n    url.search = new URLSearchParams({\r\n        per_page : 40,\r\n        query: query,\r\n    })\r\n\r\n    try {\r\n        const res = await fetch(url,{\r\n            headers: {\r\n                Authorization :`Client-ID ${REACT_APP_API_KEY}`\r\n            }\r\n        });\r\n        if(!res.ok){\r\n            console.error('Failed ',res.status)\r\n            return;\r\n        }\r\n        const json = await res.json();\r\n        return json.results\r\n    } catch (error) {\r\n        console.log(\"error hai\", error);\r\n    }\r\n    \r\n}","import React from 'react'\r\n\r\nconst Image = ({ urls, handleClick, ...rootDOMAttributes }) => {\r\n    return (\r\n        <li className=\"img\" onClick={() => handleClick(urls.regular)}\r\n            {...rootDOMAttributes}\r\n        >\r\n            <img src={urls.small} alt=\"Picsum photo\" width=\"250\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Image;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getSearchedImages, getTrendingImages } from '../api/api'\r\nimport Image from './Image'\r\nimport Masonry from 'react-masonry-component';\r\nimport Modal from 'react-modal';\r\n\r\nconst modalStyle = {\r\n    content: {\r\n        border: \"none\",\r\n        padding: \"none\",\r\n        overflow: \"none\",\r\n        background:\"none\"\r\n    }\r\n}\r\n\r\nconst Gallery = ({ query }) => {\r\n    const [imgList, setimgList] = useState([])\r\n    const [currentImg, setcurrentImg] = useState(null)\r\n    useEffect(() => {\r\n        getTrendingImages().then((data) => {\r\n            setimgList(data)\r\n        })\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n        if (query.trim() === '') {\r\n            return;\r\n        }\r\n        const data = await getSearchedImages(query);\r\n        setimgList(data);\r\n    }, [query])     \r\n    Modal.setAppElement('#root')\r\n    return (\r\n        <div>\r\n            <Modal style={modalStyle} isOpen={!!currentImg} onRequestClose={() => setcurrentImg(null)}>\r\n                <img className='imgPreview' src={currentImg} alt=\"Image Preview\" />\r\n            </Modal>\r\n            {\r\n                imgList.length === 0 ? <h2>No Image Found to Your Search</h2> : null\r\n            }\r\n\r\n            <Masonry className=\"grid-container\" options={{ isFitWidth: true }}>\r\n                {\r\n                    imgList.map(img => {\r\n                        return <Image urls={img.urls} handleClick={setcurrentImg} key={img.id} />\r\n                    })\r\n                }\r\n            </Masonry>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery\r\n","import React, {useState} from 'react';\nimport SearchBox from './components/SearchBox';\nimport Gallery from './components/Gallery';\n\nfunction App() {\n  const [input, setinput] = useState('')\n  return (\n    <center>\n      \n      <SearchBox input={input} setinput={setinput}/>\n      <Gallery query={input}/>\n    </center>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}